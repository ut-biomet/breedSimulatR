% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/population.R
\name{population}
\alias{population}
\title{An R6 class representing a population}
\description{
population object store specific information about one individual
}
\examples{

## ------------------------------------------------
## Method `population$new`
## ------------------------------------------------

# create specie:
mySpec <- specie$new(nChr = 3,
                     lchr = c(100, 150, 200),
                     recombRate = 0.006,
                     verbose = FALSE)

# simulate SNP:
SNPcoord <- data.frame(chr = c(rep("Chr1", 3),
                               rep("Chr2", 4),
                               rep("Chr3", 5)),
                       pos = c(sample(100, 3),
                               sample(150, 4),
                               sample(200, 5)),
                       SNPid = sprintf(fmt = paste0("SNP\%0", 2,"i"),
                                       1:(3 + 4 + 5)))

# create SNPinfo object:
SNPs <- SNPinfo$new(SNPcoord = SNPcoord, specie = mySpec)


# simulate haplotype:
rawHaplo1 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo1) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo1 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo1)
rawHaplo2 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo2) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo2 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo2)


# create individuals:
myInd1 <-  individual$new(name = "Ind 1",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo1,
                         verbose = FALSE)
myInd2 <-  individual$new(name = "Ind 2",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo2,
                         verbose = FALSE)
myPop <- population$new(name = "My Population 1",
                        inds = list(myInd1, myInd2),
                        verbose = FALSE)

## ------------------------------------------------
## Method `population$addInds`
## ------------------------------------------------

# create new individual

rawHaplo3 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo3) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo3 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo3)
myInd3 <-  individual$new(name = "Ind 3",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo1,
                         verbose = FALSE)

# add individual
print(myPop)
myPop$addInds(myInd3)
print(myPop)

## ------------------------------------------------
## Method `population$remInds`
## ------------------------------------------------

print(myPop)
myPop$remInds("Ind 2")
print(myPop)
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{[string] Name of the population}

\item{\code{specie}}{[specie class] Specie of the SNPs
(see:\link[breedSimulatR]{specie})}

\item{\code{inds}}{[list] list of population's individuals}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{nInd}}{[numeric] number of individual in the population}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{population$new()}}
\item \href{#method-addInds}{\code{population$addInds()}}
\item \href{#method-remInds}{\code{population$remInds()}}
\item \href{#method-print}{\code{population$print()}}
\item \href{#method-clone}{\code{population$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
Create a new population object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$new(name = "New Pop", inds = list(), verbose = T)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{name}}{[string] name of the population}

\item{\code{inds}}{[individual class or list] list of individuals of the
population (see:\link[breedSimulatR]{individual})}

\item{\code{verbose}}{[boolean] display information}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new `population` object.
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# create specie:
mySpec <- specie$new(nChr = 3,
                     lchr = c(100, 150, 200),
                     recombRate = 0.006,
                     verbose = FALSE)

# simulate SNP:
SNPcoord <- data.frame(chr = c(rep("Chr1", 3),
                               rep("Chr2", 4),
                               rep("Chr3", 5)),
                       pos = c(sample(100, 3),
                               sample(150, 4),
                               sample(200, 5)),
                       SNPid = sprintf(fmt = paste0("SNP\%0", 2,"i"),
                                       1:(3 + 4 + 5)))

# create SNPinfo object:
SNPs <- SNPinfo$new(SNPcoord = SNPcoord, specie = mySpec)


# simulate haplotype:
rawHaplo1 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo1) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo1 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo1)
rawHaplo2 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo2) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo2 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo2)


# create individuals:
myInd1 <-  individual$new(name = "Ind 1",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo1,
                         verbose = FALSE)
myInd2 <-  individual$new(name = "Ind 2",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo2,
                         verbose = FALSE)
myPop <- population$new(name = "My Population 1",
                        inds = list(myInd1, myInd2),
                        verbose = FALSE)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-addInds"></a>}}
\subsection{Method \code{addInds()}}{
Add individuals to the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$addInds(inds)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{inds}}{[individual class or list] list of individuals of the
population (see:\link[breedSimulatR]{individual})}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{# create new individual

rawHaplo3 <- matrix(sample(c(0, 1), (3 + 4 + 5) * 2, replace = TRUE), nrow = 2)
colnames(rawHaplo3) <- sprintf(fmt = paste0("SNP\%0", 2,"i"),
                              1:(3 + 4 + 5))
haplo3 <- haplotype$new(SNPinfo = SNPs,
                       haplo = rawHaplo3)
myInd3 <-  individual$new(name = "Ind 3",
                         specie = mySpec,
                         parent1 = "OkaaSan",
                         parent2 = "OtouSan",
                         haplo = haplo1,
                         verbose = FALSE)

# add individual
print(myPop)
myPop$addInds(myInd3)
print(myPop)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-remInds"></a>}}
\subsection{Method \code{remInds()}}{
Remove individuals from the population
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$remInds(indsNames)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{indsNames}}{[character] character vercor of the individuals' names}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{print(myPop)
myPop$remInds("Ind 2")
print(myPop)
}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
Display informations about the object
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{population$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
